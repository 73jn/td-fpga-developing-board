--
-- VHDL Architecture Modulation_test.sigmaDeltaModulator_tb.struct
--
-- Created:
--          by - jeann.UNKNOWN (DESKTOP-V46KISN)
--          at - 13:40:24 16.06.2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

LIBRARY Filter;
LIBRARY Modulation;
LIBRARY Modulation_test;

ARCHITECTURE struct OF sigmaDeltaModulator_tb IS

    -- Architecture declarations
    constant clockFrequency: real := 100.0E6;
    constant sineFrequency: real := 100.0E3;
    
    constant signalBitNb: positive := 16;
    constant modulatorShiftBitNb: natural := 2;
    constant filterShiftBitNb: natural := 1;
    
    constant maxAmplitude: signed(signalBitNb-1 downto 0) :=
      to_signed(2**(signalBitNb-1)*15/16, signalBitNb);

    -- Internal signal declarations
    SIGNAL clock      : std_ulogic;
    SIGNAL en         : std_ulogic;
    SIGNAL filterIn   : signed(signalBitNb-1 DOWNTO 0);
    SIGNAL filterOut  : signed(signalBitNb-1 DOWNTO 0);
    SIGNAL parallelIn : signed(signalBitNb-1 DOWNTO 0);
    SIGNAL reset      : std_ulogic;
    SIGNAL serialOut  : std_ulogic;


    -- Component Declarations
    COMPONENT lowpass
    GENERIC (
        inputBitNb  : positive := 16;
        outputBitNb : positive := 16;
        shiftBitNb  : positive := 4
    );
    PORT (
        clock     : IN     std_ulogic ;
        en        : IN     std_ulogic ;
        filterIn  : IN     signed (inputBitNb-1 DOWNTO 0);
        reset     : IN     std_ulogic ;
        filterOut : OUT    signed (outputBitNb-1 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT sigmaDeltaModulator
    GENERIC (
        signalBitNb : positive := 16;
        shiftBitNb  : natural  := 1
    );
    PORT (
        clock      : IN     std_ulogic ;
        en         : IN     std_ulogic ;
        parallelIn : IN     signed (signalBitNb-1 DOWNTO 0);
        reset      : IN     std_ulogic ;
        serialOut  : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT sigmaDeltaModulator_tester
    GENERIC (
        clockFrequency : real     := 100.0E6;
        sineFrequency  : real     := 100.0E3;
        signalBitNb    : positive := 16
    );
    PORT (
        filterOut  : IN     signed (signalBitNb-1 DOWNTO 0);
        clock      : OUT    std_ulogic ;
        en         : OUT    std_ulogic ;
        parallelIn : OUT    signed (signalBitNb-1 DOWNTO 0);
        reset      : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : lowpass USE ENTITY Filter.lowpass;
    FOR ALL : sigmaDeltaModulator USE ENTITY Modulation.sigmaDeltaModulator;
    FOR ALL : sigmaDeltaModulator_tester USE ENTITY Modulation_test.sigmaDeltaModulator_tester;
    -- pragma synthesis_on


BEGIN
    -- Architecture concurrent statements
    -- HDL Embedded Text Block 1 eb1
    filterIn <= maxAmplitude when serialOut = '1'
      else -maxAmplitude;


    -- Instance port mappings.
    I_filt : lowpass
        GENERIC MAP (
            inputBitNb  => signalBitNb,
            outputBitNb => signalBitNb,
            shiftBitNb  => filterShiftBitNb
        )
        PORT MAP (
            clock     => clock,
            en        => en,
            filterIn  => filterIn,
            reset     => reset,
            filterOut => filterOut
        );
    I_modul : sigmaDeltaModulator
        GENERIC MAP (
            signalBitNb => signalBitNb,
            shiftBitNb  => modulatorShiftBitNb
        )
        PORT MAP (
            clock      => clock,
            en         => en,
            parallelIn => parallelIn,
            reset      => reset,
            serialOut  => serialOut
        );
    I_tester : sigmaDeltaModulator_tester
        GENERIC MAP (
            clockFrequency => clockFrequency,
            sineFrequency  => sineFrequency,
            signalBitNb    => signalBitNb
        )
        PORT MAP (
            filterOut  => filterOut,
            clock      => clock,
            en         => en,
            parallelIn => parallelIn,
            reset      => reset
        );

END struct;
