--
-- VHDL Architecture SPI_test.spiFifo_master_tb.struct
--
-- Created:
--          by - francois.francois (Aphrodite)
--          at - 11:05:31 02/16/21
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

LIBRARY SPI;
LIBRARY SPI_test;

ARCHITECTURE struct OF spiFifo_master_tb IS

    -- Architecture declarations
    constant cPol: std_ulogic := '0';
    --constant cPol: std_ulogic := '1';
    --constant cPHa: std_ulogic := '0';
    constant cPHa: std_ulogic := '1';
    
    constant clockFrequency: real := 20.0E6;
    constant spiFrequency: real := 5.0E6;
    
    constant spiDataBitNb: positive := 8;
    constant spiFifoDepth: positive := 16;

    -- Internal signal declarations
    SIGNAL MISO       : std_logic;
    SIGNAL MOSI       : std_ulogic;
    SIGNAL SS_n       : std_ulogic;
    SIGNAL clock      : std_ulogic;
    SIGNAL masterData : std_ulogic_vector(spiDataBitNb-1 DOWNTO 0);
    SIGNAL masterFull : std_ulogic;
    SIGNAL masterWr   : std_ulogic;
    SIGNAL reset      : std_ulogic;
    SIGNAL sClk       : std_ulogic;
    SIGNAL slaveData  : std_ulogic_vector(spiDataBitNb-1 DOWNTO 0);
    SIGNAL slaveEmpty : std_ulogic;
    SIGNAL slaveRd    : std_ulogic;


    -- Component Declarations
    COMPONENT spiFifo_master
    GENERIC (
        dataBitNb      : positive   := 8;
        fifoDepth      : positive   := 8;
        clockFrequency : real       := 20.0E6;
        spiFrequency   : real       := 2.0E6;
        cPol           : std_ulogic := '0';
        cPha           : std_ulogic := '0'
    );
    PORT (
        slaveRd    : IN     std_ulogic ;
        slaveData  : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        clock      : IN     std_ulogic ;
        MISO       : IN     std_ulogic ;
        reset      : IN     std_ulogic ;
        MOSI       : OUT    std_ulogic ;
        slaveEmpty : OUT    std_ulogic ;
        masterFull : OUT    std_ulogic ;
        masterData : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        masterWr   : IN     std_ulogic ;
        sClk       : OUT    std_ulogic ;
        SS_n       : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT spiFifo_master_tester
    GENERIC (
        clockFrequency : real;
        spiDataBitNb   : positive;
        cPol           : std_ulogic;
        cPha           : std_ulogic
    );
    PORT (
        MISO       : IN     std_logic ;
        MOSI       : IN     std_ulogic ;
        SS_n       : IN     std_ulogic ;
        masterFull : IN     std_ulogic ;
        sClk       : IN     std_ulogic ;
        slaveData  : IN     std_ulogic_vector (spiDataBitNb-1 DOWNTO 0);
        slaveEmpty : IN     std_ulogic ;
        clock      : OUT    std_ulogic ;
        masterData : OUT    std_ulogic_vector (spiDataBitNb-1 DOWNTO 0);
        masterWr   : OUT    std_ulogic ;
        reset      : OUT    std_ulogic ;
        slaveRd    : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : spiFifo_master USE ENTITY SPI.spiFifo_master;
    FOR ALL : spiFifo_master_tester USE ENTITY SPI_test.spiFifo_master_tester;
    -- pragma synthesis_on


BEGIN
    -- Architecture concurrent statements
    -- HDL Embedded Text Block 1 eb1
    MISO <= MOSI;


    -- Instance port mappings.
    I_DUT : spiFifo_master
        GENERIC MAP (
            dataBitNb      => spiDataBitNb,
            fifoDepth      => spiFifoDepth,
            clockFrequency => clockFrequency,
            spiFrequency   => spiFrequency,
            cPol           => cPol,
            cPha           => cPha
        )
        PORT MAP (
            slaveRd    => slaveRd,
            slaveData  => slaveData,
            clock      => clock,
            MISO       => MISO,
            reset      => reset,
            MOSI       => MOSI,
            slaveEmpty => slaveEmpty,
            masterFull => masterFull,
            masterData => masterData,
            masterWr   => masterWr,
            sClk       => sClk,
            SS_n       => SS_n
        );
    I_tester : spiFifo_master_tester
        GENERIC MAP (
            clockFrequency => clockFrequency,
            spiDataBitNb   => spiDataBitNb,
            cPol           => cPol,
            cPha           => cPha
        )
        PORT MAP (
            MISO       => MISO,
            MOSI       => MOSI,
            SS_n       => SS_n,
            masterFull => masterFull,
            sClk       => sClk,
            slaveData  => slaveData,
            slaveEmpty => slaveEmpty,
            clock      => clock,
            masterData => masterData,
            masterWr   => masterWr,
            reset      => reset,
            slaveRd    => slaveRd
        );

END struct;
