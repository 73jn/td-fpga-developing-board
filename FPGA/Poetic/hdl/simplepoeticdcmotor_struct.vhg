--
-- VHDL Architecture Poetic.SimplePoeticDcMotor.struct
--
-- Created:
--          by - jeann.UNKNOWN (DESKTOP-V46KISN)
--          at - 15:48:39 13.07.2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;
LIBRARY gates;
USE gates.gates.all;

LIBRARY Board;
LIBRARY Poetic;
LIBRARY RS232;

ARCHITECTURE struct OF SimplePoeticDcMotor IS

    -- Architecture declarations

    -- Internal signal declarations
    SIGNAL OutADC       : std_ulogic_vector(adcBitNb-1 DOWNTO 0);
    SIGNAL consigne     : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
    SIGNAL endOfMsg     : std_ulogic;
    SIGNAL newCharacter : std_ulogic;
    SIGNAL out1         : std_uLogic;
    SIGNAL output       : std_ulogic_vector(11 DOWNTO 0);
    SIGNAL rxData       : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
    SIGNAL rxEmpty      : std_ulogic;
    SIGNAL rxRd         : std_ulogic;
    SIGNAL txFull       : std_ulogic;

    -- Implicit buffer signal declarations
    SIGNAL ADC_SCLK_internal : std_ulogic;
    SIGNAL BP_PWMA_internal  : std_ulogic;


    -- Component Declarations
    COMPONENT DFF
    PORT (
        CLK : IN     std_uLogic ;
        CLR : IN     std_uLogic ;
        D   : IN     std_uLogic ;
        Q   : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT and2inv1
    GENERIC (
        delay : time := gateDelay
    );
    PORT (
        in1  : IN     std_uLogic ;
        in2  : IN     std_uLogic ;
        out1 : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT clockGenerator
    GENERIC (
        counterBitNb : integer := 12;
        countValue   : integer := 250
    );
    PORT (
        clock    : IN     std_ulogic ;
        enable   : IN     std_ulogic ;
        reset    : IN     std_ulogic ;
        clockOut : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT motorController
    GENERIC (
        pidBitNb : positive := 12;
        adcBitNb : positive := 12
    );
    PORT (
        D            : IN     std_ulogic ;
        I            : IN     std_ulogic ;
        P            : IN     std_ulogic ;
        SCLK         : IN     std_ulogic ;
        SDO          : IN     std_ulogic ;
        clock        : IN     std_ulogic ;
        consigne     : IN     std_ulogic_vector (pidBitNb-1 DOWNTO 0);
        en_ADC       : IN     std_ulogic ;
        en_Regulator : IN     std_ulogic ;
        reset        : IN     std_ulogic ;
        CS_n         : OUT    std_ulogic ;
        OutADC       : OUT    std_ulogic_vector (adcBitNb-1 DOWNTO 0);
        PWM_Out      : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT serialAsciiDecoder
    PORT (
        clock        : IN     std_ulogic ;
        consigne     : IN     std_ulogic_vector (7 DOWNTO 0);
        endOfMsg     : IN     std_ulogic ;
        newCharacter : IN     std_ulogic ;
        reset        : IN     std_ulogic ;
        output       : OUT    std_ulogic_vector (11 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT uartController
    GENERIC (
        dataBitNb : positive := 8
    );
    PORT (
        clock        : IN     std_ulogic ;
        reset        : IN     std_ulogic ;
        rxData       : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        rxEmpty      : IN     std_ulogic ;
        txFull       : IN     std_ulogic ;
        consigne     : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        endOfMsg     : OUT    std_ulogic ;
        newCharacter : OUT    std_ulogic ;
        rxRd         : OUT    std_ulogic ;
        txData       : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        txWr         : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT serialPortFIFO
    GENERIC (
        baudRateDivide : positive := 2083;
        dataBitNb      : positive := 8;
        txFifoDepth    : positive := 8;
        rxFifoDepth    : positive := 8
    );
    PORT (
        RxD     : IN     std_ulogic ;
        TxD     : OUT    std_ulogic ;
        clock   : IN     std_ulogic ;
        reset   : IN     std_ulogic ;
        rxEmpty : OUT    std_ulogic ;
        rxRd    : IN     std_ulogic ;
        rxData  : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        txData  : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
        txFull  : OUT    std_ulogic ;
        txWr    : IN     std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : DFF USE ENTITY Board.DFF;
    FOR ALL : and2inv1 USE ENTITY Gates.and2inv1;
    FOR ALL : clockGenerator USE ENTITY Poetic.clockGenerator;
    FOR ALL : motorController USE ENTITY Poetic.motorController;
    FOR ALL : serialAsciiDecoder USE ENTITY Poetic.serialAsciiDecoder;
    FOR ALL : serialPortFIFO USE ENTITY RS232.serialPortFIFO;
    FOR ALL : uartController USE ENTITY Poetic.uartController;
    -- pragma synthesis_on


BEGIN

    -- Instance port mappings.
    I_dff1 : DFF
        PORT MAP (
            CLK => clock,
            CLR => reset,
            D   => BP_PWMA_internal,
            Q   => BP_PWMB
        );
    U_2 : and2inv1
        GENERIC MAP (
            delay => gateDelay
        )
        PORT MAP (
            in1  => ADC_SCLK_internal,
            in2  => txFull,
            out1 => out1
        );
    U_0 : clockGenerator
        GENERIC MAP (
            counterBitNb => 12,
            countValue   => 250
        )
        PORT MAP (
            clock    => clock,
            enable   => enable,
            reset    => reset,
            clockOut => ADC_SCLK_internal
        );
    I6 : motorController
        GENERIC MAP (
            pidBitNb => 12,
            adcBitNb => 12
        )
        PORT MAP (
            D            => D,
            I            => I,
            P            => P,
            SCLK         => ADC_SCLK_internal,
            SDO          => ADC_SDO,
            clock        => clock,
            consigne     => output,
            en_ADC       => enable,
            en_Regulator => enable,
            reset        => reset,
            CS_n         => ADC_CS,
            OutADC       => OutADC,
            PWM_Out      => BP_PWMA_internal
        );
    I23 : serialAsciiDecoder
        PORT MAP (
            clock        => clock,
            consigne     => consigne,
            endOfMsg     => endOfMsg,
            newCharacter => newCharacter,
            reset        => reset,
            output       => output
        );
    I22 : uartController
        GENERIC MAP (
            dataBitNb => 8
        )
        PORT MAP (
            clock        => clock,
            reset        => reset,
            rxData       => rxData,
            rxEmpty      => rxEmpty,
            txFull       => txFull,
            consigne     => consigne,
            endOfMsg     => endOfMsg,
            newCharacter => newCharacter,
            rxRd         => rxRd,
            txData       => OPEN,
            txWr         => OPEN
        );
    I0 : serialPortFIFO
        GENERIC MAP (
            baudRateDivide => 2083,
            dataBitNb      => 8,
            txFifoDepth    => 8,
            rxFifoDepth    => 1
        )
        PORT MAP (
            RxD     => USB_TX,
            TxD     => USB_RX,
            clock   => clock,
            reset   => reset,
            rxEmpty => rxEmpty,
            rxRd    => rxRd,
            rxData  => rxData,
            txData  => OutADC(adcBitNb-1 DOWNTO 4),
            txFull  => txFull,
            txWr    => out1
        );

    -- Implicit buffered output assignments
    ADC_SCLK <= ADC_SCLK_internal;
    BP_PWMA  <= BP_PWMA_internal;

END struct;
