--
-- VHDL Architecture Poetic_test.poetic_test.struct
--
-- Created:
--          by - jeann.UNKNOWN (DESKTOP-V46KISN)
--          at - 15:39:42 01.07.2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.ALL;

LIBRARY Poetic;
LIBRARY Poetic_test;

ARCHITECTURE struct OF poetic_test IS

    -- Architecture declarations
    constant signalBitNb: positive := 16;
    constant adcBitNb: integer := 12;
    constant dataBitNb: positive := 16;
    constant phaseBitNb: positive := 16;
    constant pidBitNb: integer := 12;

    -- Internal signal declarations
    SIGNAL ADC_SCLK   : std_ulogic;
    SIGNAL CS_n       : std_ulogic;
    SIGNAL DataToSend : std_ulogic_vector(adcBitNb-1 DOWNTO 0);
    SIGNAL SDO        : std_ulogic;
    SIGNAL Vapp       : std_ulogic_vector(11 DOWNTO 0);
    SIGNAL clock      : std_logic;
    SIGNAL enable     : std_ulogic;
    SIGNAL reset      : std_logic;
    SIGNAL speed      : std_ulogic_vector(11 DOWNTO 0);


    -- Component Declarations
    COMPONENT ADC
    GENERIC (
        adcBitNb : integer := 12
    );
    PORT (
        SCLK   : IN     std_ulogic ;
        SDO    : IN     std_ulogic ;
        clock  : IN     std_ulogic ;
        enable : IN     std_ulogic ;
        reset  : IN     std_ulogic ;
        CS_n   : OUT    std_ulogic ;
        Data   : OUT    std_ulogic_vector (adcBitNb-1 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT clockGenerator
    GENERIC (
        counterBitNb : integer := 12;
        countValue   : integer := 250
    );
    PORT (
        clock    : IN     std_ulogic ;
        enable   : IN     std_ulogic ;
        reset    : IN     std_ulogic ;
        clockOut : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT AD
    GENERIC (
        adcBitNb : positive := 12
    );
    PORT (
        CS_n       : IN     std_ulogic ;
        DataToSend : IN     std_ulogic_vector (adcBitNb-1 DOWNTO 0);
        SCLK       : IN     std_ulogic ;
        clock      : IN     std_logic ;
        reset      : IN     std_logic ;
        SDO        : OUT    std_ulogic 
    );
    END COMPONENT;
    COMPONENT motor
    PORT (
        Vapp  : IN     std_ulogic_vector (11 DOWNTO 0);
        clock : IN     std_logic ;
        reset : IN     std_logic ;
        speed : OUT    std_ulogic_vector (11 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT poetic_tester
    GENERIC (
        adcBitNb   : integer  := 12;
        phaseBitNb : positive := 16;
        pidBitNb   : positive := 12
    );
    PORT (
        DataToSend : OUT    std_ulogic_vector (adcBitNb-1 DOWNTO 0);
        Vapp       : OUT    std_ulogic_vector (11 DOWNTO 0);
        clock      : OUT    std_logic ;
        enable     : OUT    std_ulogic ;
        reset      : OUT    std_logic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : AD USE ENTITY Poetic_test.AD;
    FOR ALL : ADC USE ENTITY Poetic.ADC;
    FOR ALL : clockGenerator USE ENTITY Poetic.clockGenerator;
    FOR ALL : motor USE ENTITY Poetic_test.motor;
    FOR ALL : poetic_tester USE ENTITY Poetic_test.poetic_tester;
    -- pragma synthesis_on


BEGIN

    -- Instance port mappings.
    I3 : ADC
        GENERIC MAP (
            adcBitNb => 12
        )
        PORT MAP (
            SCLK   => ADC_SCLK,
            SDO    => SDO,
            clock  => clock,
            enable => enable,
            reset  => reset,
            CS_n   => CS_n,
            Data   => OPEN
        );
    I2 : clockGenerator
        GENERIC MAP (
            counterBitNb => 12,
            countValue   => 250
        )
        PORT MAP (
            clock    => clock,
            enable   => enable,
            reset    => reset,
            clockOut => ADC_SCLK
        );
    I1 : AD
        GENERIC MAP (
            adcBitNb => 12
        )
        PORT MAP (
            CS_n       => CS_n,
            DataToSend => DataToSend,
            SCLK       => ADC_SCLK,
            clock      => clock,
            reset      => reset,
            SDO        => SDO
        );
    I0 : motor
        PORT MAP (
            Vapp  => Vapp,
            clock => clock,
            reset => reset,
            speed => speed
        );
    I_tester : poetic_tester
        GENERIC MAP (
            adcBitNb   => 12,
            phaseBitNb => 16,
            pidBitNb   => 12
        )
        PORT MAP (
            DataToSend => DataToSend,
            Vapp       => Vapp,
            clock      => clock,
            enable     => enable,
            reset      => reset
        );

END struct;
